@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "Claims";
    Layout = "~/Views/Shared/DashboardLayout.cshtml";

    var uidString = HttpContextAccessor.HttpContext.Session.GetString("UID");
    if (string.IsNullOrEmpty(uidString))
    {
        HttpContextAccessor.HttpContext.Response.Redirect("/");
        return;
    }

    int uid = int.Parse(uidString); // Assuming UID is stored as a string representation of an integer
    var jsonFilePath = "Data/claims.json";

    // Read the JSON file and deserialize it to a List of ClaimModel
    List<Contract_Monthly_Claim.Models.ClaimModel> claims = new List<Contract_Monthly_Claim.Models.ClaimModel>();

    if (System.IO.File.Exists(jsonFilePath))
    {
        var json = System.IO.File.ReadAllText(jsonFilePath);
        claims = System.Text.Json.JsonSerializer.Deserialize<List<Contract_Monthly_Claim.Models.ClaimModel>>(json);
    }

    // Filter claims for the current lecturer
    var lecturerClaims = claims.Where(claim => claim.LecturerId == uid).ToList();
}

@if (lecturerClaims == null || !lecturerClaims.Any())
{
    <h1 class="text-center">You have no active claims</h1>
}
else
{
    <div class="claims-list">
        @foreach (var claim in lecturerClaims)
        {
            <div class="claim-item">
                <h3>Claim #@claim.ClaimId</h3>
                <p><strong>Date Submitted:</strong> @claim.DateSubmitted.ToString("yyyy-MM-dd")</p>
                <p><strong>Hours Worked:</strong> @claim.HoursWorked.TotalHours</p>
                <p><strong>Hourly Rate:</strong> @claim.TotalAmount.ToString("C")</p>
                <p><strong>Claim Status:</strong> @claim.ClaimStatus</p>
                @if (claim.CoordinatorApprovalDate > DateTime.MinValue)
                {
                    <p><strong>Coordinator Approval Date:</strong> @claim.CoordinatorApprovalDate.ToString("yyyy-MM-dd")</p>
                }
                @if (claim.ManagerApprovalDate > DateTime.MinValue)
                {
                    <p><strong>Manager Approval Date:</strong> @claim.ManagerApprovalDate.ToString("yyyy-MM-dd")</p>
                }
                <p><strong>Description: </strong> @claim.Description</p>

                @if (claim.ClaimStatus == "Rejected")
                {
                    <p><strong>Rejection Reason: </strong> @claim.RejectionReason</p>
                }

                @if (!string.IsNullOrEmpty(claim.DocumentPath))
                {
                    var fileName = claim.DocumentPath.Substring(claim.DocumentPath.LastIndexOf("/") + 1);
                    <p><strong>Document: </strong> <a href="@Url.Action("Download", "Claims", new { fileName })" target="_blank">Download Document</a></p>
                }
            </div>
        }
    </div>
}
